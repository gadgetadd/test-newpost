{"version":3,"file":"static/js/657.6af70b76.chunk.js","mappings":"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","sources":["components/Details.jsx","components/Error.jsx","redux/tracking/selectors.js","components/History.jsx","components/SearchForm.jsx","pages/TrackingPage.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\n\nexport default function Details({ data }) {\n  return (\n    <Box\n      sx={{\n        p: 2,\n      }}\n    >\n      <Typography variant=\"h4\" sx={{ textAlign: 'center', mb: 2 }}>\n        Деталі\n      </Typography>\n      <Typography sx={{ mb: 2 }}>\n        <span style={{ fontWeight: '700' }}>Статус доставки: </span>\n        {data.Status}\n      </Typography>\n      <Typography sx={{ mb: 2 }}>\n        <span style={{ fontWeight: '700' }}>Відправлено: </span>\n        {data.WarehouseSender}\n      </Typography>\n      <Typography>\n        <span style={{ fontWeight: '700' }}>Доставлено: </span>\n        {data.WarehouseRecipient}\n      </Typography>\n    </Box>\n  );\n}\n","import { Box, Typography } from '@mui/material';\n\nexport default function Error({ error }) {\n  return (\n    <Box\n      sx={{\n        p: 2,\n      }}\n    >\n      <Typography variant=\"h4\" sx={{ textAlign: 'center', mb: 2 }}>\n        Помилка\n      </Typography>\n      <Typography sx={{ mb: 2 }}>\n        <span style={{ fontWeight: '700' }}>Деталі: </span>\n        {error}\n      </Typography>\n    </Box>\n  );\n}\n","export const selectTrackingData = state => state.tracking.currentDocument;\nexport const selectHistory = state => state.tracking.history;\nexport const selectIsTrackLoading = state => state.tracking.isLoading;\nexport const selectError = state => state.tracking.error;","import { Box, Button, List, ListItemButton, Typography } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { selectHistory } from 'redux/tracking/selectors';\nimport { clearHistory } from 'redux/tracking/slice';\n\nexport default function History() {\n  const [, setSearchParams] = useSearchParams();\n  const history = useSelector(selectHistory);\n  const matches = useMediaQuery('(min-width:670px)');\n  const dispatch = useDispatch();\n\n  const clickHandler = num => {\n    setSearchParams({ q: num });\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 2,\n        borderLeft: matches ? 1 : 'none',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Typography variant=\"h4\">Історія</Typography>\n      {history.length > 0 ? (\n        <>\n          <List dense={true}>\n            {history.map((item, index) => (\n              <ListItemButton onClick={() => clickHandler(item)} key={index}>\n                {item}\n              </ListItemButton>\n            ))}\n          </List>\n          <Button onClick={() => dispatch(clearHistory())}>\n            Очистити історію\n          </Button>\n        </>\n      ) : (\n        <Typography variant=\"body1\" sx={{ mt: 2 }}>\n          Записи відсутні\n        </Typography>\n      )}\n    </Box>\n  );\n}\n","import { Box, Button, CircularProgress, Grid, TextField } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { getStatus } from 'redux/tracking/operations';\nimport { selectIsTrackLoading } from 'redux/tracking/selectors';\nimport { clearCurrent } from 'redux/tracking/slice';\nimport { string } from 'yup';\n\nexport default function SearchForm() {\n  const [trackNumber, setTrackNumber] = useState('');\n  const [isValid, setValid] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isLoading = useSelector(selectIsTrackLoading);\n  const search = searchParams.get('q') ?? '';\n  const dispatch = useDispatch();\n\n  const trackNumberSchema = string().matches(/^\\d{14}$/);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.trackNumber;\n    if (!isValid) {\n      Notify.warning('Введено невірний формат ТТН', {\n        position: 'left-bottom',\n      });\n      return;\n    }\n    setSearchParams({ q: value.trim().toLowerCase() });\n  };\n\n  useEffect(() => {\n    if (search === '') {\n      setTrackNumber('');\n      dispatch(clearCurrent());\n    } else {\n      setTrackNumber(search);\n      dispatch(getStatus(search));\n    }\n  }, [dispatch, search]);\n\n  const inputHandler = e => {\n    const { value } = e.target;\n    trackNumberSchema\n      .validate(value)\n      .then(() => setValid(true))\n      .catch(() => setValid(false));\n    setTrackNumber(value);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        mt: 8,\n        mb: 4,\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Grid container spacing={1}>\n        <Grid xs={12} sm={8} item>\n          <TextField\n            error={!isValid}\n            color=\"secondary\"\n            fullWidth\n            size=\"small\"\n            id=\"trackNumber\"\n            label=\"Введіть номер ТТН, що містить 14 цифр\"\n            variant=\"standard\"\n            title=\"Номер ТТН має містити 14 цифр\"\n            value={trackNumber}\n            onChange={inputHandler}\n          />\n        </Grid>\n        <Grid xs={12} sm={4} item>\n          <Button\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <CircularProgress size={24} color=\"inherit\" />\n            ) : (\n              'Отримати статус ТТН'\n            )}\n          </Button>\n        </Grid>{' '}\n      </Grid>\n    </Box>\n  );\n}\n","import { Box, Grid } from '@mui/material';\nimport Details from 'components/Details';\nimport Error from 'components/Error';\nimport History from 'components/History';\nimport SearchForm from 'components/SearchForm';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectTrackingData } from 'redux/tracking/selectors';\n\nexport default function TrackingPage() {\n  const error = useSelector(selectError);\n  const data = useSelector(selectTrackingData);\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid xs={12} item>\n          <SearchForm />\n        </Grid>\n        <Grid sm={8} xs={12} item>\n          {error && <Error error={error} />}\n          {data && <Details data={data} />}\n        </Grid>\n        <Grid sm={4} xs={12} item>\n          <History />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"names":["Details","_ref","data","_jsxs","Box","sx","p","children","_jsx","Typography","variant","textAlign","mb","style","fontWeight","Status","WarehouseSender","WarehouseRecipient","Error","error","selectTrackingData","state","tracking","currentDocument","selectHistory","history","selectIsTrackLoading","isLoading","selectError","History","_useSearchParams","useSearchParams","setSearchParams","_slicedToArray","useSelector","matches","useMediaQuery","dispatch","useDispatch","borderLeft","height","display","flexDirection","alignItems","length","_Fragment","List","dense","map","item","index","ListItemButton","onClick","q","Button","clearHistory","mt","SearchForm","_searchParams$get","_useState","useState","_useState2","trackNumber","setTrackNumber","_useState3","_useState4","isValid","setValid","_useSearchParams2","searchParams","search","get","trackNumberSchema","string","useEffect","clearCurrent","getStatus","component","noValidate","autoComplete","onSubmit","e","preventDefault","value","target","elements","trim","toLowerCase","Notify","warning","position","Grid","container","spacing","xs","sm","TextField","color","fullWidth","size","id","label","title","onChange","validate","then","catch","type","disabled","CircularProgress","TrackingPage","flexGrow"],"sourceRoot":""}