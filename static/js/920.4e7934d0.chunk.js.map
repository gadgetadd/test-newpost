{"version":3,"file":"static/js/920.4e7934d0.chunk.js","mappings":"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","sources":["redux/branches/selectors.js","helpers/createLocationLink.js","components/BranchCard.jsx","components/BranchesList.jsx","components/BranchForm.jsx","pages/BranchesPage.jsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nexport const selectSettlements = createSelector(\n    state => state.branches.settlements.data,\n    data => {\n        const settlements = data.map(obj => obj.Description);\n        const filtered = new Set(settlements);\n        return Array.from(filtered);\n    }\n);\n\nexport const selectSettlementsLoading = state => state.branches.settlements.isLoading;\nexport const selectBranches = state => state.branches.branches.data;\nexport const selectCurrent = state => state.branches.current;","export const createLocationLink = (lat, long) => {\n    return `https://www.google.com/maps?q=${lat},${long}`;\n}","import { ListItemButton, ListItemText } from '@mui/material';\nimport { createLocationLink } from 'helpers/createLocationLink';\n\nexport default function BrancheCard({ lat, long, name, city }) {\n  return (\n    <ListItemButton\n      href={createLocationLink(lat, long)}\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      sx={{ p: 1 }}\n    >\n      <ListItemText primary={name} secondary={city} />\n    </ListItemButton>\n  );\n}\n","import { List } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { selectBranches } from 'redux/branches/selectors';\nimport BranchCard from './BranchCard';\n\nexport default function BranchesList() {\n  const branches = useSelector(selectBranches);\n  return (\n    <List>\n      {branches.map(branch => (\n        <BranchCard\n          key={branch.Ref}\n          name={branch.Description}\n          city={branch.CityDescription}\n          lat={branch.Latitude}\n          long={branch.Longitude}\n        />\n      ))}\n    </List>\n  );\n}\n","import { Autocomplete, Box, TextField } from '@mui/material';\nimport { throttle } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSettlements, getWarehouses } from 'redux/branches/operations';\nimport {\n  selectCurrent,\n  selectSettlements,\n  selectSettlementsLoading,\n} from 'redux/branches/selectors';\nimport { setCurrent } from 'redux/branches/slice';\n\nexport default function BranchForm() {\n  const current = useSelector(selectCurrent);\n  const settlements = useSelector(selectSettlements);\n  const isLoading = useSelector(selectSettlementsLoading);\n  const dispatch = useDispatch();\n\n  const throttledDispatch = throttle(newValue => {\n    dispatch(getSettlements(newValue));\n  }, 500);\n\n  const submitHandler = (_, newValue) => {\n    if (newValue) dispatch(getWarehouses(newValue));\n  };\n\n  const inputHandler = (_, newValue) => {\n    dispatch(setCurrent(newValue));\n    throttledDispatch(newValue);\n  };\n\n  return (\n    <Box\n      sx={{\n        mt: 8,\n        mb: 4,\n      }}\n    >\n      <Autocomplete\n        disablePortal\n        id=\"branches\"\n        onChange={submitHandler}\n        inputValue={current}\n        onInputChange={inputHandler}\n        onOpen={() => {\n          dispatch(getSettlements(''));\n        }}\n        options={settlements}\n        loading={isLoading}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Населений пункт\"\n            variant=\"standard\"\n            color=\"secondary\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n","import { Typography } from '@mui/material';\nimport BranchesList from 'components/BranchesList';\nimport BrancheForm from 'components/BranchForm';\nimport { useSelector } from 'react-redux';\nimport { selectCurrent } from 'redux/branches/selectors';\n\nexport default function BranchesPage() {\n  const current = useSelector(selectCurrent);\n\n  return (\n    <>\n      <BrancheForm />\n      {current === '' ? (\n        <Typography\n          variant=\"h6\"\n          color=\"secondary\"\n          sx={{ textAlign: 'center', mt: 8 }}\n        >\n          Введіть назву населеного пункту для пошуку відділень\n        </Typography>\n      ) : (\n        <BranchesList />\n      )}\n      <BranchesList />\n    </>\n  );\n}\n"],"names":["selectSettlements","createSelector","state","branches","settlements","data","map","obj","Description","filtered","Set","Array","from","selectSettlementsLoading","isLoading","selectBranches","selectCurrent","current","createLocationLink","lat","long","concat","BrancheCard","_ref","name","city","_jsx","ListItemButton","href","component","target","rel","sx","p","children","ListItemText","primary","secondary","BranchesList","useSelector","List","branch","BranchCard","CityDescription","Latitude","Longitude","Ref","BranchForm","dispatch","useDispatch","throttledDispatch","throttle","newValue","getSettlements","Box","mt","mb","Autocomplete","disablePortal","id","onChange","_","getWarehouses","inputValue","onInputChange","setCurrent","onOpen","options","loading","renderInput","params","TextField","_objectSpread","label","variant","color","BranchesPage","_jsxs","_Fragment","BrancheForm","Typography","textAlign"],"sourceRoot":""}